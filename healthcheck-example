docker run --health-cmd="curl -f localhost:9200/_cluster/health || false" \
 --health-interval=5s \
 --health-retries=3 \
 --health-timeout=2s \
 --health-start-period=5s \
 elasticsearch:2
 

Options for healthcheck command
--interval=DURATION (default:30s)
--timeout=DURATION (default: 30s)
--start-period=DURATION (default: 0s) (17.09+)
--retries=N (default: 3)

Basic command using default options
HEALTHCHECK curl -f http://localhost/ || false

Custom options with the command
HEALTHCHECK --timeout=2s --interval=3s --retries=3 \
CMD curl -f http://localhost/ || exit 1

---- Healthcheck in Nginx Dockerfile ---------
Static website running in Nginx, just test default URL
FROM nginx:1.13
HEALTHCHECK --interval=30s --timeout=3s \
 CMD curl -f http://localhost/ || exit 1
 
 --- Healthcheck in PHP Nginx Dockerfile
 PHP-FPM running behind Nginx, test the Nginx and FPM status URLs
From your-nginx-php-fpm-combo-image
# don't do this if php-fpm is another container
# must enable php-fpm ping/status in pool.ini
# must forward /ping and /status urls from nginx to php-fpm
HEALTHCHECK --interval=5s --timeout=3s \
CMD curl -f http://localhost/ping || exit

-- Healthcheck in postgres Dockerfile
Use a PostgreSQL utility to test for ready state
FROM postgres
# specify real user with -U to prevent errors in log
HEALTHCHECK --interval=5s --timeout=3s \
 CMD pg_isready -U postgres || exit 1
 
 -- Helathcheck in Compose/Stack Files
 
 version: "2.1" (minimum for healthchecks)
 services:
  web:
   image: nginx
   healthcheck:
    test:["CMD","curl","-f","http://localhost"]
    interval: 1m30s
    timeout: 10s
    retires: 3
    start_period: 1m #version 3.4 minmum
    
